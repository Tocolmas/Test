/*
 * Timeline
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.Tag;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Inventor
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2022-02-19T09:33:27.588Z")public class Inventor   {
  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("firstname")
  private String firstname = null;

  @JsonProperty("photoUrls")
  private List<File> photoUrls = new ArrayList<File>();

  @JsonProperty("tags")
  private List<Tag> tags = null;

  /**
   * inventors status in the dataBase
   */
  public enum StatusEnum {
    ALIVE("alive"),
    
    DEAD("dead");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("borndate")
  private String borndate = null;

  @JsonProperty("deathdate")
  private String deathdate = null;

  @JsonProperty("nationalite")
  private String nationalite = null;

  public Inventor id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   **/
  @JsonProperty("id")
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Inventor name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   **/
  @JsonProperty("name")
  @ApiModelProperty(example = "Thomas Edison", required = true, value = "")
  @NotNull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Inventor firstname(String firstname) {
    this.firstname = firstname;
    return this;
  }

  /**
   * Get firstname
   * @return firstname
   **/
  @JsonProperty("firstname")
  @ApiModelProperty(value = "")
  public String getFirstname() {
    return firstname;
  }

  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }

  public Inventor photoUrls(List<File> photoUrls) {
    this.photoUrls = photoUrls;
    return this;
  }

  public Inventor addPhotoUrlsItem(File photoUrlsItem) {
    this.photoUrls.add(photoUrlsItem);
    return this;
  }

  /**
   * Get photoUrls
   * @return photoUrls
   **/
  @JsonProperty("photoUrls")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  @Valid
  public List<File> getPhotoUrls() {
    return photoUrls;
  }

  public void setPhotoUrls(List<File> photoUrls) {
    this.photoUrls = photoUrls;
  }

  public Inventor tags(List<Tag> tags) {
    this.tags = tags;
    return this;
  }

  public Inventor addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Get tags
   * @return tags
   **/
  @JsonProperty("tags")
  @ApiModelProperty(value = "")
  @Valid
  public List<Tag> getTags() {
    return tags;
  }

  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }

  public Inventor status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * inventors status in the dataBase
   * @return status
   **/
  @JsonProperty("status")
  @ApiModelProperty(value = "inventors status in the dataBase")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Inventor borndate(String borndate) {
    this.borndate = borndate;
    return this;
  }

  /**
   * when the inventor is born
   * @return borndate
   **/
  @JsonProperty("borndate")
  @ApiModelProperty(value = "when the inventor is born")
  public String getBorndate() {
    return borndate;
  }

  public void setBorndate(String borndate) {
    this.borndate = borndate;
  }

  public Inventor deathdate(String deathdate) {
    this.deathdate = deathdate;
    return this;
  }

  /**
   * when the inventor is dead
   * @return deathdate
   **/
  @JsonProperty("deathdate")
  @ApiModelProperty(value = "when the inventor is dead")
  public String getDeathdate() {
    return deathdate;
  }

  public void setDeathdate(String deathdate) {
    this.deathdate = deathdate;
  }

  public Inventor nationalite(String nationalite) {
    this.nationalite = nationalite;
    return this;
  }

  /**
   * the nationality of the inventor
   * @return nationalite
   **/
  @JsonProperty("nationalite")
  @ApiModelProperty(value = "the nationality of the inventor")
  public String getNationalite() {
    return nationalite;
  }

  public void setNationalite(String nationalite) {
    this.nationalite = nationalite;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Inventor inventor = (Inventor) o;
    return Objects.equals(this.id, inventor.id) &&
        Objects.equals(this.name, inventor.name) &&
        Objects.equals(this.firstname, inventor.firstname) &&
        Objects.equals(this.photoUrls, inventor.photoUrls) &&
        Objects.equals(this.tags, inventor.tags) &&
        Objects.equals(this.status, inventor.status) &&
        Objects.equals(this.borndate, inventor.borndate) &&
        Objects.equals(this.deathdate, inventor.deathdate) &&
        Objects.equals(this.nationalite, inventor.nationalite);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, firstname, photoUrls, tags, status, borndate, deathdate, nationalite);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Inventor {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    photoUrls: ").append(toIndentedString(photoUrls)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    borndate: ").append(toIndentedString(borndate)).append("\n");
    sb.append("    deathdate: ").append(toIndentedString(deathdate)).append("\n");
    sb.append("    nationalite: ").append(toIndentedString(nationalite)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

